openapi: 3.1.0
info:
  version: '1.2'
  title: Physically Based API
  description: |-
    This is a database of physically based values for CG artists.

    It's made available under the [CC0 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) license, which means you are free to use, modify, and distribute its content without any restrictions, even for commercial purposes. 

    Ideally, the data is to be consumed by DCC applications in the form of plug-ins, or any other form that makes sense. It's also available to browse on the web at https://physicallybased.info

    For additions or changes, feel free to make a Pull Request on Github at https://github.com/AntonPalmqvist/physically-based-api or send me a message through the [contact form.](https://physicallybased.info/about/)

    Schema: https://github.com/AntonPalmqvist/physically-based-api/blob/main/deploy/openapi-schema.yaml
  contact:
    url: 'https://physicallybased.info/about'
    name: Form
  license:
    url: 'https://creativecommons.org/publicdomain/zero/1.0/legalcode'
    name: CC0 1.0
servers:
  - url: 'https://api.physicallybased.info'
paths:
  /materials:
    get:
      tags:
        - Materials
      summary: Get materials
      description: Gets an array of all materials.
      operationId: get-materials
      requestBody:
        description: ''
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
      servers:
        - url: 'https://api.physicallybased.info'
  /lightsources:
    get:
      tags:
        - Light Sources
      summary: Get light sources
      description: Gets an array of all light sources.
      operationId: get-lightsources
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lightsource'
      servers:
        - url: 'https://api.physicallybased.info'
  /cameras:
    get:
      tags:
        - Cameras
      summary: Get cameras
      description: Gets an array of all cameras.
      operationId: get-cameras
      requestBody:
        content: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Camera'
      servers:
        - url: 'https://api.physicallybased.info'
tags:
  - name: Materials
  - name: Light Sources
  - name: Cameras
components:
  schemas:
    Material:
      type: object
      title: Material
      description: 'PBR material using the Autodesk Standard Surface naming conventions: https://autodesk.github.io/standard-surface/'
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the material.
          default: Name
        color:
          $ref: '#/components/schemas/color'
          description: 'The albedo of non-metals, or reflection color of metals, RGB triplet in linear decimal format with rec709 primaries.'
        metalness:
          type: number
        specularColor:
          $ref: '#/components/schemas/color'
        roughness:
          type: number
          default: 0
        ior:
          type: number
          default: 1.5
        subsurfaceRadius:
          $ref: '#/components/schemas/color'
          description: 'The approximate distance up to which light can scatter below the surface, also known as “mean free path” (MFP). Specified in centimeters.'
        transmission:
          type: number
        transmissionDispersion:
          type: number
          description: 'Abbe number, describing how much the index of refraction varies across wavelengths. For glass and diamonds, this is typically in the range of 10 to 70, with lower numbers giving more dispersion.'
        complexIor:
          type: array
          description: 'Complex IOR values, n (refractive index), and k (extinction coefficient), for each color channel, in the following order: nR, kR, nG, kG, nB, kB. Calculated from spectral IOR data files.'
          minItems: 6
          maxItems: 6
          items:
            type: number
        thin_film_thickness:
          type: number
          description: The thickness of the thin film layer on the base (in nanometers).
        thin_film_ior:
          type: number
          description: The index of refraction of the thin-film.
          default: 1.5
        density:
          type: number
          description: Density measured in kg/m3.
        densityRange:
          type: array
          description: The typical range of density.
          minItems: 2
          maxItems: 2
          items:
            type: number
        viscosity:
          type: number
          description: Dynamic viscosity measured in millipascal-seconds (mPa⋅s) at a temperature of 20°C. 1 mPa⋅s (millipascal-second) = 1 cP (centipoise). Used for fluid simulations.
        acousticAbsorption:
          type: array
          description: 'Absorption coefficients at 125, 250, 500, 1000, 2000, and 4000 kHz.'
          minItems: 6
          maxItems: 6
          items:
            type: number
        category:
          type: array
          minItems: 1
          maxItems: 1
          items:
            enum:
              - Calibration
              - Crystal
              - Gas
              - Human
              - Liquid
              - Manmade
              - Metal
              - Organic
              - Plastic
        group:
          type: string
          description: 'Can be used to group similar materials together. For example, Skin I, Skin II, and Skin III would be part of the same group: Skin.'
        description:
          $ref: '#/components/schemas/description'
        sources:
          $ref: '#/components/schemas/sources'
        tags:
          $ref: '#/components/schemas/tags'
        reference:
          type: array
          description: Links to reference images.
          uniqueItems: true
          items:
            type: string
            format: uri
      required:
        - name
        - color
        - metalness
        - roughness
        - category
        - sources
      examples:
        - name: Aluminum
          color:
            - 0.912
            - 0.914
            - 0.92
          metalness: 1
          specularColor:
            - 0.97
            - 0.979
            - 0.988
          roughness: 0
          complexIor:
            - 1.3456
            - 7.4746
            - 0.96521
            - 6.3995
            - 0.61722
            - 5.3031
          density: 2700
          category:
            - Metal
          sources:
            - 'https://refractiveindex.info/?shelf=3d&book=metals&page=aluminium'
            - 'https://docs.arnoldrenderer.com/display/A5AFMUG/Base'
            - 'https://en.wikipedia.org/wiki/Aluminium'
            - 'https://en.wikipedia.org/wiki/Density'
            - 'https://en.wikipedia.org/wiki/Mirror'
          tags:
            - aluminium
            - mirror
          reference:
            - 'https://raw.githubusercontent.com/AntonPalmqvist/physically-based-api/main/reference/render/aluminum-cycles.png'
    color:
      type: array
      title: color
      minItems: 3
      maxItems: 3
      items:
        type: number
    description:
      type: string
      title: description
      description: This field should be used for disclaimers and other useful info for CG artists that may affect the way they use the values. It's totally fine to leave this empty.
      maxLength: 500
    sources:
      type: array
      title: sources
      description: Provide at least one source for the values.
      minItems: 1
      uniqueItems: true
      items:
        type: string
        format: uri
    tags:
      type: array
      title: tags
      description: Tags for alternative names or spellings.
      uniqueItems: true
      items:
        type: string
    Lightsource:
      type: object
      title: Lightsource
      description: A light source.
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the light source.
          default: Name
        color:
          $ref: '#/components/schemas/color'
          description: Color of the light source.
        temperature:
          type: number
          description: 'Color temperature in Kelvin, if color lies on the Planckian curve.'
          default: 6500
        temperatureRange:
          type: array
          description: The typical range of color temperature for this specific light source.
          minItems: 2
          maxItems: 2
          items:
            type: number
        intensity:
          type: number
        intensityRange:
          type: array
          description: The typical range of intensity for this specific light source.
          minItems: 2
          maxItems: 2
          items:
            type: number
        unit:
          type: array
          minItems: 1
          maxItems: 1
          items:
            enum:
              - lm
              - lx
              - cd/m2
        type:
          type: array
          description: 'The type of light, for DCC applications.'
          minItems: 1
          maxItems: 1
          items:
            enum:
              - directional
              - surface
              - spot
              - point
              - cylinder
              - dome
        category:
          type: array
          minItems: 1
          maxItems: 1
          items:
            enum:
              - Artificial
              - Natural
        description:
          $ref: '#/components/schemas/description'
        sources:
          $ref: '#/components/schemas/sources'
        tags:
          $ref: '#/components/schemas/tags'
      required:
        - name
        - color
        - intensity
        - unit
        - category
        - sources
      examples:
        - name: Household Light Bulb
          color:
            - 1
            - 0.415
            - 0.099
          temperature: 2700
          temperatureRange:
            - 2400
            - 6000
          intensity: 800
          intensityRange:
            - 400
            - 1000
          unit:
            - lm
          type:
            - point
          category:
            - Artificial
          description: 'Today''s household lightbulbs has a LED light source whereas older light bulbs were using a glowing tungsten filament. LED:s are much much more energy efficient and makes the use of wattage, as a measure of intensity, not very useful. This is why lumen is preferred.'
          sources:
            - 'https://en.wikipedia.org/wiki/Incandescent_light_bulb'
            - 'https://en.wikipedia.org/wiki/LED_lamp'
          tags:
            - incandescent
            - tungsten
    Camera:
      type: object
      title: Camera
      description: 'Any type of camera that is being used, or simulated, in any way in CG productions (including games).'
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the camera.
        sensorSize:
          type: array
          description: 'Array of sensor sizes. First item specifies the size of a fully open gate. If needed, additional sizes can be added for cameras that crop the sensor.'
          items:
            type: object
            additionalProperties: false
            properties:
              format:
                type: string
                description: Specifies the sensor format.
                default: Open Gate
              size:
                type: array
                description: Sensor size in millimeters (width x height).
                minItems: 2
                maxItems: 2
                items:
                  type: number
            required:
              - format
              - size
        category:
          type: array
          minItems: 1
          maxItems: 1
          items:
            enum:
              - Still
              - Movie
              - Mobile
        description:
          $ref: '#/components/schemas/description'
        sources:
          $ref: '#/components/schemas/sources'
          description: Provide at least one source for the values. Source link to official manufacturer website is preferred.
        tags:
          $ref: '#/components/schemas/tags'
      required:
        - name
        - sensorSize
        - category
        - sources
      examples:
        - name: Arri Alexa 65
          sensorSize:
            - format: Open Gate
              size:
                - 54.12
                - 25.58
            - format: '5.1K 16:9'
              size:
                - 42.24
                - 23.76
            - format: LF Open Gate
              size:
                - 36.7
                - 25.54
            - format: '4.3K 3:2'
              size:
                - 35.64
                - 23.76
            - format: 4K UHD
              size:
                - 31.68
                - 17.82
          category:
            - Movie
          sources:
            - 'https://www.arrirental.com/en/cameras/exclusive-cameras/alexa-65'
            - 'https://www.arri.com/resource/blob/277386/3d47cc0f22a5ebe30a48f68cc7bf94a1/2022-05-arri-formatsandresolutionsoverview-4-1-data.pdf'
            - 'https://en.wikipedia.org/wiki/IMAX#Film_cameras'
          tags:
            - imax
